#!/bin/bash
#
# Do install stuff for ppc64el, including making bootable CDs
# Works with debian-installer
#
# $1 is the CD number
# $2 is the temporary CD build dir

. $BASEDIR/tools/boot/$DI_CODENAME/common.sh

set -e
#set -x

case "$MKISOFS" in
    *xorriso*)
        XORRISO_VER=$(xorriso_version)
        ;;
    *)
	echo "ERROR: debian-cd now depends on xorriso for making ppc64el bootable CDs."
	exit 1;
	;;
esac

N=$1
CDDIR=$2
INSTALLDIR=$CDDIR/install
if [ "$DI_WWW_HOME" = "default" ];then
    DI_WWW_HOME="https://d-i.debian.org/daily-images/ppc64el/daily"
    try_di_image_cache
fi

# Common mkisofs options when creating CDs
add_mkisofs_opt $CDDIR/../$N.mkisofs_opts "-J -joliet-long"
add_mkisofs_opt $CDDIR/../$N.mkisofs_opts "-cache-inodes"

# Only disc 1 bootable
if [ $N != 1 ] ; then exit 0; fi

cd $CDDIR/..

BOOT_IMAGES="cdrom/initrd.gz cdrom/vmlinux cdrom/debian-cd_info.tar.gz"

# Download boot images.
for image in $BOOT_IMAGES; do
    if [ ! -e "$image" ]; then
        dir=$(dirname $image)
        mkdir -p $dir
        if [ -n "$LOCAL"  -a -f "${LOCALDEBS:-$MIRROR}/dists/$DI_DIST/local/installer-$ARCH/current/images/$image" ]; then
            cp "${LOCALDEBS:-$MIRROR}/dists/$DI_DIST/local/installer-$ARCH/current/images/$image" "$image"
        elif [ ! "$DI_WWW_HOME" ];then
            if [ ! "$DI_DIR" ];then
                DI_DIR="$MIRROR/dists/$DI_DIST/main/installer-$ARCH/current/images"
            fi
            cp "$DI_DIR/$image" "$image"
        else
            $WGET "$DI_WWW_HOME/$image" -O "$image"
        fi
    fi
done

# Boot setup including config and help files comes from d-i.
mkdir -pv $PWD/CD$N
cat cdrom/debian-cd_info.tar.gz | (cd CD$N/; tar zx)

# Copy kernel and initrd
mkdir -p $INSTALLDIR
cp -lf cdrom/vmlinux $INSTALLDIR/
cp -lf cdrom/initrd.gz $INSTALLDIR/

# Add CHRP boot header
if [ -f CD$N/ppc/bootinfo.txt ] ; then
    add_mkisofs_opt $CDDIR/../$N.mkisofs_opts "-chrp-boot-part"
fi

exit 0
